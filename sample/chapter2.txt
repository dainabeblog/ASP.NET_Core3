リスト2-1
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.HttpsPolicy;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;


namespace SampleMVCApp
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }


        public IConfiguration Configuration { get; }


        public void ConfigureServices(IServiceCollection services)
        {
            services.AddControllersWithViews();
        }


        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            else
            {
                app.UseExceptionHandler("/Home/Error");
                app.UseHsts();
            }
            app.UseHttpsRedirection();
            app.UseStaticFiles();


            app.UseRouting();


            app.UseAuthorization();


            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllerRoute(
                    name: "default",
                    pattern: "{controller=Home}/{action=Index}/{id?}");
            });
        }
    }
}




リスト2-2
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using SampleMVCApp.Models;


namespace SampleMVCApp.Controllers
{
    public class HomeController : Controller
    {
        private readonly ILogger<HomeController> _logger;


        public HomeController(ILogger<HomeController> logger)
        {
            _logger = logger;
        }


        public IActionResult Index()
        {
            return View();
        }


        public IActionResult Privacy()
        {
            return View();
        }


        [ResponseCache(Duration = 0, Location = 
            ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = 
                Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
    }
}




リスト2-3
@{
    Layout = "_Layout";
}




リスト2-4
@using SampleMVCApp
@using SampleMVCApp.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers




リスト2-5
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" 
        content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SampleMVCApp</title>
    <link rel="stylesheet" 
        href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <header>
        <nav class="navbar ……略……">
            <div class="container">
                <a class="navbar-brand" asp-area="" 
                    asp-controller="Home" asp-action="Index">
                    SampleMVCApp</a>
                <button class="navbar-toggler" type="button"
                    data-toggle="collapse" data-target=".navbar-collapse" 
                    aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse ……略……">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" 
                                asp-controller="Home" asp-action="Index">
                                Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" 
                                asp-controller="Home" asp-action="Privacy">
                                Privacy</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>


    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2019 - SampleMVCApp - <a asp-area="" 
            asp-controller="Home" asp-action="Privacy">
            Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>




@{
    ViewData["Title"] = "Home Page";
}


<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>




リスト2-7
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;


namespace SampleMVCApp.Controllers
{
    public class HelloController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }
    }
}




リスト2-8
@{
    ViewData["Title"] = "Index/Hello";
}


<div class="text-center">
    <h1>Index</h1>
    <p>This is sample page.</p>
</div>




リスト2-9
public IActionResult Index()
{
    ViewData["Message"] = "Hello! this is sample message!";
    return View();
}




リスト2-10
<div class="text-center">
    <h1>Index</h1>
    <p>@ViewData["Message"]</p>
</div>




リスト2-11
<div class="text-left">
    <h1 class="display-3">Index</h1>
    <p class="h4 mb-4">@ViewData["Message"]</p>
    <form method="post" asp-controller="Hello" asp-action="Form">
        <div class="form-group">
            <label for="msg">Message</label>
            <input type="text" name="msg" id="msg" class="form-control" />
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-primary" />
        </div>
    </form>
</div>




リスト2-12
public class HelloController : Controller
{
    public IActionResult Index()
    {
        ViewData["Message"] = "Hello! this is sample message!";
        return View();
    }


    [HttpPost]
    public IActionResult Form()
    {
        ViewData["Message"] = Request.Form["msg"];
        return View("Index");
    }
}




リスト2-13
[HttpPost]
public IActionResult Form(string msg)
{
    ViewData["Message"] = msg;
    return View("Index");
}




リスト2-14
public class HelloController : Controller
{


    public IActionResult Index()
    {
        ViewData["message"] = "Input your data:";
        ViewData["name"] = "";
        ViewData["mail"] = "";
        ViewData["tel"] = "";
        return View();
    }


    [HttpPost]
    public IActionResult Form()
    {
        ViewData["name"] = Request.Form["name"];
        ViewData["mail"] = Request.Form["mail"];
        ViewData["tel"] = Request.Form["tel"];
        ViewData["message"] = ViewData["name"] + ", " +
                ViewData["mail"] + ",  " + ViewData["tel"];
        return View("Index");
    }
}




リスト2-15――※Formの引数を利用する場合
[HttpPost]
public IActionResult Form(string name, string mail, string tel)
{
    ViewData["name"] = name;
    ViewData["mail"] = mail;
    ViewData["tel"] = tel;
    ViewData["message"] = ViewData["name"] + ", " +
            ViewData["mail"] + ",  " + ViewData["tel"];
    return View("Index");
}




リスト2-16
@{
    ViewData["Title"] = "Index/Hello";
    var name = ViewData["name"];
    var mail = ViewData["mail"];
    var tel = ViewData["tel"];
}


<div class="text-left">
    <h1 class="display-3">Index</h1>
    <p class="h4 mb-4">@ViewData["message"]</p>
    <form method="post" asp-controller="Hello" asp-action="Form">
        <div class="form-group">
            <label asp-for="@name" class="h5">@name</label>
            <input asp-for="@name" class="form-control">
        </div>
        <div class="form-group">
            <label asp-for="@mail" class="h5">@mail</label>
            <input asp-for="@mail" class="form-control">
        </div>
        <div class="form-group">
            <label asp-for="@tel" class="h5">@tel</label>
            <input asp-for="@tel" class="form-control">
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-primary" />
        </div>
    </form>
</div>




リスト2-17
public class HelloController : Controller
{
    public List<string> list;


    public HelloController()
    {
        list = new List<string>();
        list.Add("Japan");
        list.Add("USA");
        list.Add("UK");
    }
    public IActionResult Index()
    {
        ViewData["message"] = "Select item:";
        ViewData["list"] = "";
        ViewData["listdata"] = list;
        return View();
    }


    [HttpPost]
    public IActionResult Form()
    {
        ViewData["message"] = '"' + Request.Form["list"] + '"' + " selected.";
        ViewData["list"] = Request.Form["list"];
        ViewData["listdata"] = list;
        return View("Index");
    }
}




リスト2-18
@{
    ViewData["Title"] = "Index/Hello";
    var list = ViewData["list"];


    List<string> data = (List<string>)ViewData["listdata"];
    List<SelectListItem> listdata = new List<SelectListItem>();
    foreach (string item in data)
    {
        listdata.Add(new SelectListItem { Value = item, Text = item });
    }
}


<div class="text-left">
    <h1 class="display-3">Index</h1>
    <p class="h4 mb-4">@ViewData["message"]</p>
    <form method="post" asp-controller="Hello" asp-action="Form">
        <div class="form-group">
            <select asp-for="@list" asp-items="@listdata" class="form-control"></select>
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-primary" />
        </div>
    </form>
</div>




リスト2-19
public IActionResult Index()
{
    ViewData["message"] = "Select item:";
    ViewData["list"] = new string[] {};  // ☆
    ViewData["listdata"] = list;
    return View();
}


[HttpPost]
public IActionResult Form()
{
    string[] res = (string[])Request.Form["list"];
    string msg = "※";
    foreach(var item in res)
    {
        msg += "「" + item + "」";
    }
    ViewData["message"] = msg + " selected.";
    ViewData["list"] = Request.Form["list"];
    ViewData["listdata"] = list;
    return View("Index");
}




リスト2-20
@{
    ViewData["Title"] = "Index/Hello";
}


<div class="text-left">
    <h1 class="display-3">Index</h1>
    <p class="h4 mb-4">@ViewData["message"]</p>
</div>




リスト2-21
[Route("Hello/{id?}/{name?}")]
public IActionResult Index(int id, string name)
{
    ViewData["message"] = "id = " + id + ", name = " + name;
    return View();
}




リスト2-22
@{
    ViewData["Title"] = "Index/Hello";
}


<div class="text-left">
    <h1 class="display-3">Index</h1>
    <p class="h4 mb-4">@ViewData["message"]</p>
    <ul class="h5">
        <li>@ViewData["id"]</li>
        <li>@ViewData["name"]</li>
    </ul>
</div>




リスト2-23
// using Microsoft.AspNetCore.Http; 追記する


public class HelloController : Controller
{
    
    [HttpGet("Hello/{id?}/{name?}")]
    public IActionResult Index(int id, string name)
    {
        ViewData["message"] = "※セッションにIDとNameを保存しました。";
        HttpContext.Session.SetInt32("id", id);
        HttpContext.Session.SetString("name", name);
        return View();
    }


    [HttpGet]
    public IActionResult Other()
    {
        ViewData["id"] = HttpContext.Session.GetInt32("id");
        ViewData["name"] = HttpContext.Session.GetString("name");
        ViewData["message"] = "保存されたセッションの値を表示します。";
        return View("Index");
    }
}




リスト2-24
@{
    ViewData["Title"] = "Index/Hello";
}


<div class="text-left">
    <h1 class="display-3">Index</h1>
    <p class="h4 mb-4">@ViewData["message"]</p>
    <pre class="h5">Value = @ViewData["object"]</pre>
</div>




リスト2-25
// using System.IO; // 追加
// using System.Runtime.Serialization.Formatters.Binary; //追加


public class HelloController : Controller
{
        
    [HttpGet("Hello/{id?}/{name?}")]
    public IActionResult Index(int id, string name)
    {
        ViewData["message"] = "※セッションにIDとNameを保存しました。";
        MyData ob = new MyData(id, name);
        HttpContext.Session.Set("object", ObjectToBytes(ob));
        ViewData["object"] = ob;
        return View();
    }


    [HttpGet]
    public IActionResult Other()
    {
        ViewData["message"] = "保存されたセッションの値を表示します。";
        byte[] ob = HttpContext.Session.Get("object");
        ViewData["object"] = BytesToObject(ob);
        return View("Index");
    }


    // convert object to byte[].
    private byte[] ObjectToBytes(Object ob)
    {
        BinaryFormatter bf = new BinaryFormatter();
        MemoryStream ms = new MemoryStream();
        bf.Serialize(ms, ob);
        return ms.ToArray();
    }


    // convert byte[] to object.
    private Object ct(byte[] arr)
    {
        MemoryStream ms = new MemoryStream();
        BinaryFormatter bf = new BinaryFormatter();
        ms.Write(arr, 0, arr.Length);
        ms.Seek(0, SeekOrigin.Begin);
        return (Object)bf.Deserialize(ms);
    }
}


[Serializable]
class MyData
{
    public int Id = 0;
    public string Name = "";
 
    public MyData(int id, string name)
    {
        this.Id = id;
        this.Name = name;
    }


    override public string ToString()
    {
        return "<" + Id + ": " + Name + ">";
    }
}




リスト2-26
[HttpGet]
public IActionResult Index()
{
    ViewData["message"] = "※テーブルの表示";
    ViewData["header"] = new string[] { "id", "name", "mail"};
    ViewData["data"] = new string[][]{
        new string[]{ "1", "Taro", "taro@yamada"},
        new string[]{ "2", "Hanako", "hanako@flower"},
        new string[]{ "3", "Sachiko", "sachiko@happy"}
    };
    return View();
}


（※Otherアクションは削除しておく）




リスト2-27
@{
    string[] header = (string[])ViewData["header"];
    string[][] data = (string[][])ViewData["data"];
}


<table class="table">
    <tr>
    @foreach(string item in header)
    {
        <th>@item</th>
    }
    </tr>
    @foreach(var row in data)
    {
        <tr>
        @foreach(var item in row)
        {
            <td>@item</td>
        }
        </tr>
    }
</table>




リスト2-28
@{
    ViewData["Title"] = "Index/Hello";
}


<div class="text-left">
    <h1 class="display-3">Index</h1>
    <p class="h4 mb-4">@ViewData["message"]</p>
    <partial name="_table.cshtml">
</div>